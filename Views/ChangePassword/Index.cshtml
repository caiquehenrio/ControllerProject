@using ControllerProject.Enums
@model ChangePasswordModel

@{
    ViewData["Title"] = "Change User Password";

}

<div class="text-center">
    <h1 class="display-4">Change User Password</h1>
</div>

@if (TempData["SuccessMessage"] != null)
{

    <div class="alert alert-success" role="alert">
        <button type="button" class="btn btn-light btn-sm close-alert" aria-label="Close">x</button>
        @TempData["SuccessMessage"]
    </div>

}

@if (TempData["ErrorMessage"] != null)
{

    <div class="alert alert-danger" role="alert">
        <button type="button" class="btn btn-light btn-sm close-alert" aria-label="Close">x</button>
        @TempData["ErrorMessage"]
    </div>

}

<form asp-controller="ChangePassword" asp-action="Change" method="post">

    <div class="form-group">
        <label for="currentPassword">Current Password</label>
        <input type="password" asp-for="CurrentPassword" class="form-control" placeholder="Enter the user's current password">
        @Html.ValidationMessageFor(x => x.CurrentPassword)
    </div>

    <div class="form-group">
        <label for="newPassword">New Password</label>
        <input type="password" asp-for="NewPassword" class="form-control" placeholder="Enter the new user password">
        @Html.ValidationMessageFor(x => x.NewPassword)
    </div>

    <div class="form-group">
        <label for="confirmNewPassword">Confirm New Password</label>
        <input type="password" asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirm the user's new password">
        @Html.ValidationMessageFor(x => x.ConfirmNewPassword)
    </div>

    <button type="submit" class="btn btn-light">Change</button>
    <a class="btn btn-light" asp-controller="Home" asp-action="Index" role="button">Back</a>
</form>
